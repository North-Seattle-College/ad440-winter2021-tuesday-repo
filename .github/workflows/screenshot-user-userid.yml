# This is a basic workflow to help you get started with Actions
name: Screenshot user/{user_id} endpoint
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [development]
  pull_request:
    branches: [development]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: nodeJS and npm version
        run: npm -v
      - name: npm init
        run: npm init -y
      - name: Install yarn
        run: npm install --global yarn
      - name: Puppeteer Screenshot Action
        uses: JonathanTreffler/full-website-screenshot-action@v1.0
        with:
          url: https://nscstrdevusw2tuecommon.z5.web.core.windows.net
          destination: capture-user-id_${{ steps.date.outputs.date }}.png
        #Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
          #Upload File
      - name: uploading to Azure Blob Storage
        uses: azure/CLI@v1
        with:
          azcliversion: 2.19.1
          inlineScript: |
            az storage blob upload --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.STORAGE_ACCOUNT_KEY }}  --container-name ${{ secrets.BLOB_CONTAINER_SCREENSHOTS }} --file capture-user-id_${{ steps.date.outputs.date }}.png --name capture-user-id_${{ steps.date.outputs.date }}.png
